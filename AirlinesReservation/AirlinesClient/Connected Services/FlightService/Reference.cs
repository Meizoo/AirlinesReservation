//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AirlinesClient.FlightService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Flight", Namespace="http://schemas.datacontract.org/2004/07/AirlinesReservation.Models")]
    [System.SerializableAttribute()]
    public partial class Flight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TakenSitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToCityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromCity {
            get {
                return this.FromCityField;
            }
            set {
                if ((object.ReferenceEquals(this.FromCityField, value) != true)) {
                    this.FromCityField = value;
                    this.RaisePropertyChanged("FromCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sits {
            get {
                return this.SitsField;
            }
            set {
                if ((this.SitsField.Equals(value) != true)) {
                    this.SitsField = value;
                    this.RaisePropertyChanged("Sits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TakenSits {
            get {
                return this.TakenSitsField;
            }
            set {
                if ((this.TakenSitsField.Equals(value) != true)) {
                    this.TakenSitsField = value;
                    this.RaisePropertyChanged("TakenSits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToCity {
            get {
                return this.ToCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ToCityField, value) != true)) {
                    this.ToCityField = value;
                    this.RaisePropertyChanged("ToCity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/AirlinesReservation.Models")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AirlinesClient.FlightService.Sex GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birth {
            get {
                return this.BirthField;
            }
            set {
                if ((this.BirthField.Equals(value) != true)) {
                    this.BirthField = value;
                    this.RaisePropertyChanged("Birth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationTime {
            get {
                return this.CreationTimeField;
            }
            set {
                if ((this.CreationTimeField.Equals(value) != true)) {
                    this.CreationTimeField = value;
                    this.RaisePropertyChanged("CreationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AirlinesClient.FlightService.Sex Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sex", Namespace="http://schemas.datacontract.org/2004/07/AirlinesReservation.Models")]
    public enum Sex : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TicketType", Namespace="http://schemas.datacontract.org/2004/07/AirlinesReservation.Models")]
    public enum TicketType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstClass = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessClass = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RoundTrip = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reservation", Namespace="http://schemas.datacontract.org/2004/07/AirlinesReservation.Models")]
    [System.SerializableAttribute()]
    public partial class Reservation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AirlinesClient.FlightService.Flight FlightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlightIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AirlinesClient.FlightService.ReservationType ReservationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AirlinesClient.FlightService.Ticket TicketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AirlinesClient.FlightService.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationTime {
            get {
                return this.CreationTimeField;
            }
            set {
                if ((this.CreationTimeField.Equals(value) != true)) {
                    this.CreationTimeField = value;
                    this.RaisePropertyChanged("CreationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DurationTime {
            get {
                return this.DurationTimeField;
            }
            set {
                if ((this.DurationTimeField.Equals(value) != true)) {
                    this.DurationTimeField = value;
                    this.RaisePropertyChanged("DurationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AirlinesClient.FlightService.Flight Flight {
            get {
                return this.FlightField;
            }
            set {
                if ((object.ReferenceEquals(this.FlightField, value) != true)) {
                    this.FlightField = value;
                    this.RaisePropertyChanged("Flight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlightId {
            get {
                return this.FlightIdField;
            }
            set {
                if ((this.FlightIdField.Equals(value) != true)) {
                    this.FlightIdField = value;
                    this.RaisePropertyChanged("FlightId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AirlinesClient.FlightService.ReservationType ReservationType {
            get {
                return this.ReservationTypeField;
            }
            set {
                if ((this.ReservationTypeField.Equals(value) != true)) {
                    this.ReservationTypeField = value;
                    this.RaisePropertyChanged("ReservationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AirlinesClient.FlightService.Ticket Ticket {
            get {
                return this.TicketField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketField, value) != true)) {
                    this.TicketField = value;
                    this.RaisePropertyChanged("Ticket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AirlinesClient.FlightService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ticket", Namespace="http://schemas.datacontract.org/2004/07/AirlinesReservation.Models")]
    [System.SerializableAttribute()]
    public partial class Ticket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBoughtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AirlinesClient.FlightService.TicketType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBought {
            get {
                return this.IsBoughtField;
            }
            set {
                if ((this.IsBoughtField.Equals(value) != true)) {
                    this.IsBoughtField = value;
                    this.RaisePropertyChanged("IsBought");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AirlinesClient.FlightService.TicketType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReservationType", Namespace="http://schemas.datacontract.org/2004/07/AirlinesReservation.Models")]
    public enum ReservationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Done = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FlightService.IFlightService")]
    public interface IFlightService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightService/FindFlight", ReplyAction="http://tempuri.org/IFlightService/FindFlightResponse")]
        AirlinesClient.FlightService.Flight[] FindFlight(string toCity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightService/FindFlight", ReplyAction="http://tempuri.org/IFlightService/FindFlightResponse")]
        System.Threading.Tasks.Task<AirlinesClient.FlightService.Flight[]> FindFlightAsync(string toCity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightService/GetAllFlights", ReplyAction="http://tempuri.org/IFlightService/GetAllFlightsResponse")]
        AirlinesClient.FlightService.Flight[] GetAllFlights();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightService/GetAllFlights", ReplyAction="http://tempuri.org/IFlightService/GetAllFlightsResponse")]
        System.Threading.Tasks.Task<AirlinesClient.FlightService.Flight[]> GetAllFlightsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightService/Login", ReplyAction="http://tempuri.org/IFlightService/LoginResponse")]
        AirlinesClient.FlightService.User Login(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightService/Login", ReplyAction="http://tempuri.org/IFlightService/LoginResponse")]
        System.Threading.Tasks.Task<AirlinesClient.FlightService.User> LoginAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightService/BuyTicket", ReplyAction="http://tempuri.org/IFlightService/BuyTicketResponse")]
        AirlinesClient.FlightService.Reservation BuyTicket(AirlinesClient.FlightService.User user, AirlinesClient.FlightService.Flight flight, AirlinesClient.FlightService.TicketType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightService/BuyTicket", ReplyAction="http://tempuri.org/IFlightService/BuyTicketResponse")]
        System.Threading.Tasks.Task<AirlinesClient.FlightService.Reservation> BuyTicketAsync(AirlinesClient.FlightService.User user, AirlinesClient.FlightService.Flight flight, AirlinesClient.FlightService.TicketType type);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFlightServiceChannel : AirlinesClient.FlightService.IFlightService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlightServiceClient : System.ServiceModel.ClientBase<AirlinesClient.FlightService.IFlightService>, AirlinesClient.FlightService.IFlightService {
        
        public FlightServiceClient() {
        }
        
        public FlightServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FlightServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AirlinesClient.FlightService.Flight[] FindFlight(string toCity) {
            return base.Channel.FindFlight(toCity);
        }
        
        public System.Threading.Tasks.Task<AirlinesClient.FlightService.Flight[]> FindFlightAsync(string toCity) {
            return base.Channel.FindFlightAsync(toCity);
        }
        
        public AirlinesClient.FlightService.Flight[] GetAllFlights() {
            return base.Channel.GetAllFlights();
        }
        
        public System.Threading.Tasks.Task<AirlinesClient.FlightService.Flight[]> GetAllFlightsAsync() {
            return base.Channel.GetAllFlightsAsync();
        }
        
        public AirlinesClient.FlightService.User Login(string username) {
            return base.Channel.Login(username);
        }
        
        public System.Threading.Tasks.Task<AirlinesClient.FlightService.User> LoginAsync(string username) {
            return base.Channel.LoginAsync(username);
        }
        
        public AirlinesClient.FlightService.Reservation BuyTicket(AirlinesClient.FlightService.User user, AirlinesClient.FlightService.Flight flight, AirlinesClient.FlightService.TicketType type) {
            return base.Channel.BuyTicket(user, flight, type);
        }
        
        public System.Threading.Tasks.Task<AirlinesClient.FlightService.Reservation> BuyTicketAsync(AirlinesClient.FlightService.User user, AirlinesClient.FlightService.Flight flight, AirlinesClient.FlightService.TicketType type) {
            return base.Channel.BuyTicketAsync(user, flight, type);
        }
    }
}
